// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userservice

import (
	"context"

	"douyin-tiktok/service/user/cmd/rpc/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CodeResp         = __.CodeResp
	GetInfoByIdReq   = __.GetInfoByIdReq
	GetInfoByIdResp  = __.GetInfoByIdResp
	GetInfoListReq   = __.GetInfoListReq
	GetInfoListResp  = __.GetInfoListResp
	UpdateWorkCntReq = __.UpdateWorkCntReq
	User             = __.User

	UserService interface {
		GetInfoById(ctx context.Context, in *GetInfoByIdReq, opts ...grpc.CallOption) (*GetInfoByIdResp, error)
		GetInfoList(ctx context.Context, in *GetInfoListReq, opts ...grpc.CallOption) (*GetInfoListResp, error)
		UpdateWorkCnt(ctx context.Context, in *UpdateWorkCntReq, opts ...grpc.CallOption) (*CodeResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) GetInfoById(ctx context.Context, in *GetInfoByIdReq, opts ...grpc.CallOption) (*GetInfoByIdResp, error) {
	client := __.NewUserServiceClient(m.cli.Conn())
	return client.GetInfoById(ctx, in, opts...)
}

func (m *defaultUserService) GetInfoList(ctx context.Context, in *GetInfoListReq, opts ...grpc.CallOption) (*GetInfoListResp, error) {
	client := __.NewUserServiceClient(m.cli.Conn())
	return client.GetInfoList(ctx, in, opts...)
}

func (m *defaultUserService) UpdateWorkCnt(ctx context.Context, in *UpdateWorkCntReq, opts ...grpc.CallOption) (*CodeResp, error) {
	client := __.NewUserServiceClient(m.cli.Conn())
	return client.UpdateWorkCnt(ctx, in, opts...)
}
