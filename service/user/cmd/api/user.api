syntax = "v1"

info(
	title: "type title here"
	desc: "type desc here"
	author: "type author here"
	email: "type email here"
	version: "type version here"
)

@server(
	prefix: /douyin/user
)
service user-api {
	@handler register
	post /register (LoginReq) returns ()
	
	@handler login
	post /login (LoginReq) returns ()
}

@server(
	group: user
	prefix: /douyin/user
)
service user-api {
	@handler getInfo
	get / (UserIdReq) returns ()
}

@server(
	group: relation
	prefix: /douyin/relation
)
service user-api {
	@handler relationAction
	post /action (RelationActionReq) returns ()
	
	@handler listFollowedUsersByUserId
	get /follow/list (UserIdReq) returns ()
	
	@handler listFollowersByUserId
	get /follower/list (UserIdReq) returns ()
	
	@handler listFriendsByUserId
	get /friend/list (UserIdReq) returns ()
}

@server(
	group: message
	prefix: /douyin/message
)
service user-api {
	@handler chat
	post /chat (ChatReq) returns ()
	
	@handler messageAction
	get /action (MessageAction) returns ()
}

type (
	TokenReq {
		Token string `form:"token"`
	}

	UserIdReq {
		TokenReq
		UserId int64 `form:"user_id"`
	}

	LoginReq {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	FavoriteActionReq {
		TokenReq
		VideoId    int64 `form:"video_id"`
		ActionType int32 `form:"action_type"`
	}

	RelationActionReq {
		TokenReq
		ToUserId   int64 `form:"to_user_id"`
		ActionType int32 `form:"action_type"`
	}

	ChatReq {
		TokenReq
		ToUserId   int64 `form:"to_user_id"`
		PreMsgTime int64 `form:"pre_msg_time"`
	}

	MessageAction {
		TokenReq
		ToUserId   int64  `form:"to_user_id"`
		ActionType int32  `form:"action_type"`
		Content    string `form:"cOntent"`
	}
)