// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userservice

import (
	"context"

	"douyin-tiktok/service/user/cmd/rpc/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CodeResp            = __.CodeResp
	GetInfoByUserIdResp = __.GetInfoByUserIdResp
	User                = __.User
	UserIdReq           = __.UserIdReq

	UserService interface {
		GetInfoByUserId(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*GetInfoByUserIdResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) GetInfoByUserId(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*GetInfoByUserIdResp, error) {
	client := __.NewUserServiceClient(m.cli.Conn())
	return client.GetInfoByUserId(ctx, in, opts...)
}
