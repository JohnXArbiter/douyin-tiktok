// Code generated by goctl. DO NOT EDIT.
// Source: FILE.proto

package fileservice

import (
	"context"

	"douyin-tiktok/service/file/cmd/rpc/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CodeResp        = __.CodeResp
	RemoveVideoReq  = __.RemoveVideoReq
	UploadVideoReq  = __.UploadVideoReq
	UploadVideoResp = __.UploadVideoResp

	FileService interface {
		UploadVideo(ctx context.Context, in *UploadVideoReq, opts ...grpc.CallOption) (*UploadVideoResp, error)
		RemoveVideo(ctx context.Context, in *RemoveVideoReq, opts ...grpc.CallOption) (*CodeResp, error)
	}

	defaultFileService struct {
		cli zrpc.Client
	}
)

func NewFileService(cli zrpc.Client) FileService {
	return &defaultFileService{
		cli: cli,
	}
}

func (m *defaultFileService) UploadVideo(ctx context.Context, in *UploadVideoReq, opts ...grpc.CallOption) (*UploadVideoResp, error) {
	client := __.NewFileServiceClient(m.cli.Conn())
	return client.UploadVideo(ctx, in, opts...)
}

func (m *defaultFileService) RemoveVideo(ctx context.Context, in *RemoveVideoReq, opts ...grpc.CallOption) (*CodeResp, error) {
	client := __.NewFileServiceClient(m.cli.Conn())
	return client.RemoveVideo(ctx, in, opts...)
}
