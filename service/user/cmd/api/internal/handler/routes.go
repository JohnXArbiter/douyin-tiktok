// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	message "douyin-tiktok/service/user/cmd/api/internal/handler/message"
	relation "douyin-tiktok/service/user/cmd/api/internal/handler/relation"
	user "douyin-tiktok/service/user/cmd/api/internal/handler/user"
	"douyin-tiktok/service/user/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: registerHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: loginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/douyin/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: user.GetInfoHandler(serverCtx),
			},
		},
		rest.WithPrefix("/douyin/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/action",
				Handler: relation.RelationActionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/follow/list",
				Handler: relation.ListFollowedUsersByUserIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/follower/list",
				Handler: relation.ListFollowersByUserIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/friend/list",
				Handler: relation.ListFriendsByUserIdHandler(serverCtx),
			},
		},
		rest.WithPrefix("/douyin/relation"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/chat",
				Handler: message.ChatHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/action",
				Handler: message.MessageActionHandler(serverCtx),
			},
		},
		rest.WithPrefix("/douyin/message"),
	)
}
